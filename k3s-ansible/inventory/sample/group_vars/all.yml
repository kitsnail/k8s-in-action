---
# access https://update.k3s.io/v1-release/channels/stable to get latest stable k3s version
k3s_version: v1.32.3+k3s1
# this is the user that has ssh access to these machines
ansible_user: root
systemd_dir: /etc/systemd/system

# Set your timezone
system_timezone: Asia/Shanghai

# custom cluster cidr and service cidr
cluster_cidr: 172.24.0.0/13
service_cidr: 172.23.0.0/16

# interface which will be used for flannel
flannel_iface: ens160

# uncomment cilium_iface to use cilium cni instead of flannel 
# ensure v4.19.57, v5.1.16, v5.2.0 or more recent kernel
#cilium_iface: "ens160"
cilium_mode: native # native when nodes on same subnet or using bgp, else set routed
cilium_tag: v1.16.9 # cilium version tag
cilium_hubble: true # enable hubble observability relay and ui
# enable cilium bgp control plane for lb services and pod cidrs. disables metallb.
cilium_bgp: false
# bgp parameters for cilium cni. only active when cilium_iface is defined and cilium_bgp is true.
cilium_bgp_my_asn: "64513"
cilium_bgp_peer_asn: "64512"
cilium_bgp_peer_address: 192.168.30.1
cilium_bgp_lb_cidr: 192.168.31.0/24 # cidr for cilium loadbalancer ipam

# enable kube-vip ARP broadcasts
kube_vip_arp: true
# enable kube-vip BGP peering
kube_vip_bgp: false
# bgp parameters for kube-vip
kube_vip_bgp_routerid: "127.0.0.1" # Defines the router ID for the BGP server
kube_vip_bgp_as: "64513" # Defines the AS for the BGP server
kube_vip_bgp_peeraddress: "192.168.30.1" # Defines the address for the BGP peer
kube_vip_bgp_peeras: "64512" # Defines the AS for the BGP peer

# apiserver_endpoint is virtual ip-address which will be configured on each master
apiserver_endpoint: 172.18.15.100

# k3s_token is required  masters can talk together securely
# this token should be alpha numeric only
# execute: echo $(tr -dc a-z0-9 </dev/urandom | head -c 32)
k3s_token: dj0c0ykqz50f5g2kixzx2h9j3b76k0g8

# The IP on which the node is reachable in the cluster.
# Here, a sensible default is provided, you can still override
# it for each of your hosts, though.
k3s_node_ip: "{{ ansible_facts[(cilium_iface | default(calico_iface | default(flannel_iface)))]['ipv4']['address'] }}"

# Disable the taint manually by setting: k3s_master_taint = false
k3s_master_taint: "{{ true if groups['node'] | default([]) | length >= 1 else false }}"

# these arguments are recommended for servers as well as agents:
extra_args: >-
  {{ '--flannel-iface=' + flannel_iface if calico_iface is not defined and cilium_iface is not defined else '' }}
  --node-ip={{ k3s_node_ip }}
  --kubelet-arg runtime-request-timeout=15m
  --kubelet-arg container-log-max-files=3
  --kubelet-arg container-log-max-size=10Mi

# change these to your liking, the only required are: --disable servicelb, --tls-san {{ apiserver_endpoint }}
# the contents of the if block is also required if using calico or cilium
extra_server_args: >-
  {{ extra_args }}
  {{ '--node-taint node-role.kubernetes.io/master=true:NoSchedule' if k3s_master_taint else '' }}
  {% if cilium_iface is defined %}
  --flannel-backend=none
  --disable-network-policy
  {% endif %}
  --tls-san {{ apiserver_endpoint }}
  --disable servicelb
  --disable traefik
  --cluster-cidr={{ cluster_cidr | default('172.24.0.0/14') }}
  --service-cidr={{ service_cidr | default('172.29.0.0/16') }}
  --embedded-registry
  {% if custom_scheduler %}
  --kube-scheduler-arg authentication-tolerate-lookup-failure=false
  --kube-scheduler-arg config=/etc/rancher/k3s/scheduler.yaml
  {% endif %}

extra_agent_args: >-
  {{ extra_args }}

# image tag for kube-vip
kube_vip_tag_version: v0.9.0
# tag for kube-vip-cloud-provider manifest
# kube_vip_cloud_provider_tag_version: "main"
# kube-vip ip range for load balancer
# (uncomment to use kube-vip for services instead of MetalLB)
# kube_vip_lb_ip_range: "192.168.30.80-192.168.30.90"

# metallb type frr or native
metal_lb_type: native
# metallb mode layer2 or bgp
metal_lb_mode: layer2
# bgp options
# metal_lb_bgp_my_asn: "64513"
# metal_lb_bgp_peer_asn: "64512"
# metal_lb_bgp_peer_address: "192.168.30.1"
# image tag for metal lb
metal_lb_speaker_tag_version: v0.14.9
metal_lb_controller_tag_version: v0.14.9
# metallb ip range for load balancer
metal_lb_ip_range: 172.18.15.120-172.18.15.129

# Only enable this if you have set up your own container registry to act as a mirror / pull-through cache
# (harbor / nexus / docker's official registry / etc).
# Can be beneficial for larger dev/test environments (for example if you're getting rate limited by docker hub),
# or air-gapped environments where your nodes don't have internet access after the initial setup
# (which is still needed for downloading the k3s binary and such).
# k3s's documentation about private registries here: https://docs.k3s.io/installation/private-registry
custom_registries: true
# The registries can be authenticated or anonymous, depending on your registry server configuration.
# If they allow anonymous access, simply remove the following bit from custom_registries_yaml
#   configs:
#     "registry.domain.com":
#       auth:
#         username: yourusername
#         password: yourpassword
# The following is an example that pulls all images used in this playbook through your private registries.
# It also allows you to pull your own images from your private registry, without having to use imagePullSecrets
# in your deployments.
# If all you need is your own images and you don't care about caching the docker/quay/ghcr.io images,
# you can just remove those from the mirrors: section.
custom_registries_yaml: |
  mirrors:
    docker.io:
      endpoint:
        - "https://mirror.gcr.io"

# Only enable and configure these if you access the internet through a proxy
proxy_env:
  HTTP_PROXY: "http://172.18.3.171:3128"
  HTTPS_PROXY: "http://172.18.3.171:3128"
  NO_PROXY: "127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.64.0.0/10,*.exmaple.com"

# Enable most allocated scheduler for GPU clusters.
custom_scheduler: true
custom_scheduler_yaml: |
  apiVersion: kubescheduler.config.k8s.io/v1
  kind: KubeSchedulerConfiguration
  clientConnection:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
  profiles:
  - pluginConfig:
    - args:
        scoringStrategy:
          resources:
          - name: cpu
            weight: 1
          - name: memory
            weight: 1
          - name: nvidia.com/gpu
            weight: 3
          type: MostAllocated
      name: NodeResourcesFit